Variable: 

List: most versatile of Python's compound data types. A list contains items separated by commas and enclosed within square brackets ([]).

Dictionary: The dictionary allows you to associate one piece of data (a "key") with another (a "value"). The analogy comes from real-life dictionaries, where we associate a word (the "key") with its meaning. You can create a dictionary with {}; What makes dictionaries so useful is that we can give meaning to the items within them.

*By combining lists and dictionaries you can describe basically any data structure used in computing.

Data Type: Python has five standard data types
      Numbers
      String
      List
      Tuple - A tuple is another sequence data type that is similar to the list. A tuple consists of a number of values separated by commas. Unlike lists, however, tuples are enclosed within parentheses.
      Dictionary

Data Structure:
      x = 3          # numbers
      a = "gorillas" # strings
      t = True       # booleans

Control Flow:

Iterate:

Invoke:

Instantiate:

Objects:

Instance:

Parameters vs arguments:

Object Oriented Programming:

Inheritance: allows multiple base classes, a derived class can override any methods of its base class or classes, and a method can call the method of a base class with the same name.

Python supports four different numerical types âˆ’
    int (signed integers)
    long (long integers, they can also be represented in octal and hexadecimal)
    float (floating point real values)
    complex (complex numbers)

Loops: allows us to execute a statement or group of statements multiple times. 
  while loop: Repeats a statement or group of statements while a given condition is TRUE. It tests the condition before executing the loop body.
  for loop: Executes a sequence of statements multiple times and abbreviates the code that manages the loop variable.
  nested loops: You can use one or more loop inside any another while, for or do..while loop.
  
Control Statements: 
  break statement: Terminates the loop statement and transfers execution to the statement immediately following the loop.
  continue statement: Causes the loop to skip the remainder of its body and immediately retest its condition prior to reiterating.
  pass statement: The pass statement in Python is used when a statement is required syntactically but you do not want any command or code to execute.
